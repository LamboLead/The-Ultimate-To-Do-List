* To-do list

-> Investigate about functional programming examples to handle user input and select HTML elements.
- Result: For now, use the procedural/functional way of doing things: Define html elements and add event listeners to them.

-> Handle user input properly (task insert, update list name & update task caption)

-> Clear input element with button
-> Enter task with button

-> Delete tasks
-> Edit tasks
-> Check tasks
-> Reorder tasks
- Result: All right!

-> Create new list
- Done!
-> Switch to certain list
- Done!
-> Delete list (add confirmation window)
- Done!
-> Update list name
- Done!
-> Reorder lists
- Done!

-> Add error handling for input (Add a fadeout for the rest of the page but the input element, and clear it if the input is OK).
- Done!

* Customization

-> Set user images as background
- Done!
-> Toggle animations properly
- Done!
-> Toggle theme
- Done!
-> Save images in database & retrieve them from database
- Done!
-> Set up slider functionality
- Done!

-> Eliminate the 'go back button'. Do that functionality with the 'select images' button
- In progress

* Issues

-> To-do > On delete list: The list is not being deleted inside "Lists" array on IndexedDB, causing problems.
- Testing...

-> To-do > On retrieving Api-images: When rendering slider, data in the store "Lists" is being saved without intention.
Possible causes: Mutation observer

-> Background manager > Setting up animations for the first time: Database value for 'animations' does not match with what appears on screen.
Possible causes: The program doesn't set a default value for animations in the database.

-> To-do > On checking and deleting tasks: The function 'findElementIndex' is not defined.

-> Slider > On showing slider when it is not shown: The fetched images do not accomodate to the slider's width.
Possible causes: The frameWidth for the slider has the wrong value

-> Performance: The program is too slow!
Possible causes: Hardware limitations (processor, CPU, hard drive), too much animations, memory leak, unintended calling of functions, bad coding practices...